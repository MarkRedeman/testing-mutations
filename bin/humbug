#!/usr/bin/env php
<?php

(function ($version, $arguments) {
    // Nicely copied from PHPSpec's executable

    if (is_file($autoload = getcwd() . '/vendor/autoload.php')) {
        require $autoload;
    } elseif (is_file($autoload = getcwd() . '/../../autoload.php')) {
        require $autoload;
    }

    if (is_file($autoload = __DIR__ . '/../vendor/autoload.php')) {
        require($autoload);
    } elseif (is_file($autoload = __DIR__ . '/../../../autoload.php')) {
        require($autoload);
    } else {
        fwrite(STDERR,
            'You must set up the project dependencies, run the following commands:' . PHP_EOL .
            'curl -s http://getcomposer.org/installer | php' . PHP_EOL .
            'php composer.phar install' . PHP_EOL
        );
        exit(1);
    }

    $app = new Renamed\Application\Application(
        new Renamed\Application\ApplicationContext(
            new Renamed\Application\Environment(
                $arguments,
                [
                    'cwd' => getcwd(),
                    'project-path' => __DIR__ . '/../examples/demo-phpunit/',
                ],

                // At some point replace this with a configuration loader
                // (new Renamed\Application\ConfigurationLoader())(getcwd())
                [
                    // 'test-framework-executable' => 'vendor/bin/phpspec run',
                    // 'test-framework-executable' => 'bin/phpspec run',
                    'test-framework-executable' => 'vendor/bin/phpunit',
                    // 'test-framework-bootstrap' => 'bootstrap/autoload.php',
                    'test-framework-bootstrap' => 'vendor/autoload.php',
                    'test-framework-options' => [
                        '--stop-on-failure',
                        // '--format=dot',
                        // '--testsuite "Unit"'
                    ],
                    'test-frameworks' => [
                        'phpunit' => [
                            'executable' => 'vendor/bin/phpunit',
                            'bootstrap' => 'vendor/autoload.php',
                            'options' => [
                                '--stop-on-failure'
                            ]
                        ],
                        // 'phpspec' => [
                        //     'executable' => 'bin/phpspec',
                        //     'bootstrap' => 'vendor/autoload.php',
                        //     'options' => [
                        //         '--stop-on-failure'
                        //     ]
                        // ],
                        // 'behat' => [
                        //     'executable' => 'vendor/bin/behat',
                        //     'bootstrap' => 'vendor/autoload.php',
                        //     'options' => [
                        //         '--stop-on-failure'
                        //     ]
                        // ]
                    ],
                    'target-directories' => ['src'],
                    'extensions' => [
                        \Renamed\Application\Extensions\NyanCatProgressBar::class,
                        \Renamed\Application\Extensions\OutputStatistics::class,
                        \Renamed\Application\Extensions\MeassurePerformance::class,
                        \Renamed\Application\Extensions\KeepTrackOfMutationsOnFile::class,
                    ]
                ]
            )
        )
    );

    $app->run();
})('0.0.1', $argv);
