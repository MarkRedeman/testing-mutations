{
    "summary": {
        "total": 32,
        "kills": 32,
        "escapes": 0,
        "errors": 0,
        "timeouts": 0,
        "notests": 0,
        "covered_score": 100,
        "combined_score": 100,
        "mutation_coverage": 100
    },
    "uncovered": [],
    "escaped": [],
    "errored": [],
    "timeouts": [],
    "killed": [
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
            "class": "\\Kata\\Conway\\Cell",
            "method": "isANeighbour",
            "line": 31,
            "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return in_array($neighbour, $this->getNeighbours());\n+        in_array($neighbour, $this->getNeighbours()); return null;\n     }\n \n     public function equals($other)\n     {\n         return $this->getX() === $other->getX() && $this->getY() === $other->getY();\n     }",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
            "class": "\\Kata\\Conway\\Cell",
            "method": "equals",
            "line": 36,
            "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $this->getX() === $other->getX() && $this->getY() === $other->getY();\n+        return $this->getX() !== $other->getX() && $this->getY() === $other->getY();\n     }\n \n     public function neighboursIn($environment)\n     {\n         $neighbours = 0;\n ",
            "tests": [
                "Test\\Kata\\Conway\\CellTest::cells_can_be_equal"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
            "class": "\\Kata\\Conway\\Cell",
            "method": "equals",
            "line": 36,
            "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $this->getX() === $other->getX() && $this->getY() === $other->getY();\n+        return $this->getX() === $other->getX() || $this->getY() === $other->getY();\n     }\n \n     public function neighboursIn($environment)\n     {\n         $neighbours = 0;\n ",
            "tests": [
                "Test\\Kata\\Conway\\CellTest::cells_can_be_equal"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
            "class": "\\Kata\\Conway\\Cell",
            "method": "equals",
            "line": 36,
            "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $this->getX() === $other->getX() && $this->getY() === $other->getY();\n+        return $this->getX() === $other->getX() && $this->getY() !== $other->getY();\n     }\n \n     public function neighboursIn($environment)\n     {\n         $neighbours = 0;\n ",
            "tests": [
                "Test\\Kata\\Conway\\CellTest::cells_can_be_equal"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "neighboursIn",
            "line": 41,
            "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        $neighbours = 0;\n+        $neighbours = 1;\n \n         foreach ($environment as $neighbour) {\n             if ($this->isANeighbour($neighbour)) {\n                 $neighbours++;\n             }\n         }",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_detects_when_it_has_no_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_is_alone",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Increment\\Increment",
            "class": "\\Kata\\Conway\\Cell",
            "method": "neighboursIn",
            "line": 45,
            "diff": "--- Original\n+++ New\n@@ @@\n             if ($this->isANeighbour($neighbour)) {\n-                $neighbours++;\n+                $neighbours--;\n             }\n         }\n         return $neighbours;\n     }\n \n     public function survivesIn($environment)",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
            "class": "\\Kata\\Conway\\Cell",
            "method": "survivesIn",
            "line": 56,
            "diff": "--- Original\n+++ New\n@@ @@\n         if (in_array($this, $environment)) {\n-            return in_array($neighbours, self::$survivesWithValues);\n+            in_array($neighbours, self::$survivesWithValues); return null;\n         }\n \n         return in_array($neighbours, self::$spawnsWithValues);\n     }\n \n     public function getNeighbours()",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
            "class": "\\Kata\\Conway\\Cell",
            "method": "survivesIn",
            "line": 59,
            "diff": "--- Original\n+++ New\n@@ @@\n \n-        return in_array($neighbours, self::$spawnsWithValues);\n+        in_array($neighbours, self::$spawnsWithValues); return null;\n     }\n \n     public function getNeighbours()\n     {\n         return [\n             new self($this->getX() + 1, $this->getY()),",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_is_alone",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Addition",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 65,
            "diff": "--- Original\n+++ New\n@@ @@\n         return [\n-            new self($this->getX() + 1, $this->getY()),\n+            new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() + 1, $this->getY() - 1),\n             new self($this->getX()    , $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 65,
            "diff": "--- Original\n+++ New\n@@ @@\n         return [\n-            new self($this->getX() + 1, $this->getY()),\n+            new self($this->getX() + 0, $this->getY()),\n             new self($this->getX() + 1, $this->getY() - 1),\n             new self($this->getX()    , $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Addition",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 66,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() + 1, $this->getY()),\n-            new self($this->getX() + 1, $this->getY() - 1),\n+            new self($this->getX() - 1, $this->getY() - 1),\n             new self($this->getX()    , $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 66,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() + 1, $this->getY()),\n-            new self($this->getX() + 1, $this->getY() - 1),\n+            new self($this->getX() + 0, $this->getY() - 1),\n             new self($this->getX()    , $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 66,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() + 1, $this->getY()),\n-            new self($this->getX() + 1, $this->getY() - 1),\n+            new self($this->getX() + 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 66,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() + 1, $this->getY()),\n-            new self($this->getX() + 1, $this->getY() - 1),\n+            new self($this->getX() + 1, $this->getY() - 0),\n             new self($this->getX()    , $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 67,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() + 1, $this->getY() - 1),\n-            new self($this->getX()    , $this->getY() - 1),\n+            new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() - 1, $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 67,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() + 1, $this->getY() - 1),\n-            new self($this->getX()    , $this->getY() - 1),\n+            new self($this->getX()    , $this->getY() - 0),\n             new self($this->getX() - 1, $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 68,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX()    , $this->getY() - 1),\n-            new self($this->getX() - 1, $this->getY() - 1),\n+            new self($this->getX() + 1, $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 68,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX()    , $this->getY() - 1),\n-            new self($this->getX() - 1, $this->getY() - 1),\n+            new self($this->getX() - 0, $this->getY() - 1),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 68,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX()    , $this->getY() - 1),\n-            new self($this->getX() - 1, $this->getY() - 1),\n+            new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 68,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX()    , $this->getY() - 1),\n-            new self($this->getX() - 1, $this->getY() - 1),\n+            new self($this->getX() - 1, $this->getY() - 0),\n             new self($this->getX() - 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 69,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() - 1, $this->getY() - 1),\n-            new self($this->getX() - 1, $this->getY()),\n+            new self($this->getX() + 1, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }\n }",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 69,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() - 1, $this->getY() - 1),\n-            new self($this->getX() - 1, $this->getY()),\n+            new self($this->getX() - 0, $this->getY()),\n             new self($this->getX() - 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }\n }",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 70,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() - 1, $this->getY()),\n-            new self($this->getX() - 1, $this->getY() + 1),\n+            new self($this->getX() + 1, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }\n }\n ",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 70,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() - 1, $this->getY()),\n-            new self($this->getX() - 1, $this->getY() + 1),\n+            new self($this->getX() - 0, $this->getY() + 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }\n }\n ",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Addition",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 70,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() - 1, $this->getY()),\n-            new self($this->getX() - 1, $this->getY() + 1),\n+            new self($this->getX() - 1, $this->getY() - 1),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }\n }\n ",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 70,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() - 1, $this->getY()),\n-            new self($this->getX() - 1, $this->getY() + 1),\n+            new self($this->getX() - 1, $this->getY() + 0),\n             new self($this->getX()    , $this->getY() + 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }\n }\n ",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Addition",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 71,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() - 1, $this->getY() + 1),\n-            new self($this->getX()    , $this->getY() + 1),\n+            new self($this->getX()    , $this->getY() - 1),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }\n }\n \n",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 71,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX() - 1, $this->getY() + 1),\n-            new self($this->getX()    , $this->getY() + 1),\n+            new self($this->getX()    , $this->getY() + 0),\n             new self($this->getX() + 1, $this->getY() + 1),\n         ];\n     }\n }\n \n",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Addition",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 72,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX()    , $this->getY() + 1),\n-            new self($this->getX() + 1, $this->getY() + 1),\n+            new self($this->getX() - 1, $this->getY() + 1),\n         ];\n     }\n }\n \n",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 72,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX()    , $this->getY() + 1),\n-            new self($this->getX() + 1, $this->getY() + 1),\n+            new self($this->getX() + 0, $this->getY() + 1),\n         ];\n     }\n }\n \n",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Arithmetic\\Addition",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 72,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX()    , $this->getY() + 1),\n-            new self($this->getX() + 1, $this->getY() + 1),\n+            new self($this->getX() + 1, $this->getY() - 1),\n         ];\n     }\n }\n \n",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        },
        {
            "file": "src\/Kata\/Conway\/Cell.php",
            "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
            "class": "\\Kata\\Conway\\Cell",
            "method": "getNeighbours",
            "line": 72,
            "diff": "--- Original\n+++ New\n@@ @@\n             new self($this->getX()    , $this->getY() + 1),\n-            new self($this->getX() + 1, $this->getY() + 1),\n+            new self($this->getX() + 1, $this->getY() + 0),\n         ];\n     }\n }\n \n",
            "tests": [
                "Test\\Kata\\Conway\\BoardTest::it_should_create_a_list_of_potential_cells",
                "Test\\Kata\\Conway\\BoardTest::it_should_handle_the_blinker_formation",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_can_detect_if_its_not_a_neighbour",
                "Test\\Kata\\Conway\\CellTest::it_is_not_a_neighbour_to_itself",
                "Test\\Kata\\Conway\\CellTest::it_can_count_neighbours_in_a_list_of_cells",
                "Test\\Kata\\Conway\\CellTest::it_can_determine_if_it_will_survive_among_the_other_cells",
                "Test\\Kata\\Conway\\CellTest::it_dies_if_it_has_four_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_not_spawn_if_it_has_two_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_will_spawn_if_it_has_three_neighbours",
                "Test\\Kata\\Conway\\CellTest::it_can_generate_a_list_of_neighbouring_cells"
            ],
            "stderr": "",
            "stdout": "TAP version 13"
        }
    ]
}